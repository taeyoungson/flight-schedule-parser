name: Create Release on Main Push

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.0"

      - name: Zip python dependencies
        run: |
          python -m pip install --upgrade pip
          mkdir -p python
          uv export --no-hashes --format requirements-txt > requirements.txt
          pip install --platform manylinux2014_x86_64 -r requirements.txt -t python/ --only-binary=:all:

          zip -r aws-lambda-python-dependencies-v0.0.${{ github.run_number }}.zip python/
          rm requirements.txt

      - name: Zip source codes
        run: |
          zip -r aws-lambda-source-codes-v0.0.${{ github.run_number }}.zip utils/ jobs/ calendars/ server/  
          ls -lh aws-lambda-source-codes-v0.0.${{ github.run_number }}.zip

      - name: Create GitHub Release (Source codes)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v0.0.${{ github.run_number }}
          name: "aws-lambda-source-codes v0.0.${{ github.run_number }}"
          body: "Release scheulder codes v0.0.${{ github.run_number }}"
          draft: false
          prerelease: false
          files: aws-lambda-source-codes-v0.0.${{ github.run_number }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create GitHub Release (Python dependencies)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v0.0.${{ github.run_number }}
          name: "aws-lambda-python-dependencies v0.0.${{ github.run_number }}"
          body: "Release scheulder dependencies v0.0.${{ github.run_number }}"
          draft: false
          prerelease: false
          files: aws-lambda-python-dependencies-v0.0.${{ github.run_number }}.zip
        env:
            GITHUB_TOKEN: ${{ secrets.GH_PAT }}
